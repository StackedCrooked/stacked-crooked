<?xml version="1.0"?>
<?xml-stylesheet href="chrome://navigator/skin/navigator.css" type="text/css"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<window id="testWindow"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    title="XPCOM Test application"
    orient="vertical"
    align="stretch"
    screenX="240"
    screenY="120"
    width="640"
    height="480">

    <script type="application/x-javascript">
        <![CDATA[
        try
        {
            var TestApp = {};
            TestApp.logMsg = "";

            TestApp.initialize = function() {
                netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
                var cid = "@stacked-crooked.com/XPCOMSample/CrookedComponent;1";
                var filterTextBox = TestApp.getFilterTextBox();
                filterTextBox.value = cid;
                filterTextBox.setAttribute("oninput", "TestApp.updateRegisteredClasses()");

                var clearButton = document.getElementById("clearButton");
                clearButton.setAttribute("oncommand", "TestApp.clearFilter();");
                TestApp.updateRegisteredClasses();
            };

            /**
             * TestApp.log
             *
             * Enables logging in the logging textbox.
             */
            TestApp.log = function(msg) {
                TestApp.logMsg += msg + "\n";
                var logTextBox = document.getElementById("logTextBox");
                logTextBox.value = TestApp.logMsg;
            };


            TestApp.getFilterTextBox = function() {
                var filterTextBox = document.getElementById("filterTextBox");
                if (filterTextBox === null) {
                    throw "Did not find the filter textbox element.";
                }
                return filterTextBox;
            };

            TestApp.getFilter = function() {
                var filterTextBox = TestApp.getFilterTextBox();
                var filter = filterTextBox.value;
                if (filter === null) {
                    throw "Failed to get the filter string.";
                }
                return filter;
            };

            TestApp.clearFilter = function() {
                var filterTextBox = TestApp.getFilterTextBox();
                filterTextBox.value = "";
                TestApp.updateRegisteredClasses();

                var filterTextBox = TestApp.getFilterTextBox();
                filterTextBox.focus();
            };

            TestApp.updateRegisteredClasses = function() {
                var matches = TestApp.getRegisteredClasses(TestApp.getFilter());
                var text = "";
                for (var i = 0; i < matches.length; i++) { 
                    if (i > 0) {
                        text += "\n";
                    }
                    text += matches[i];
                }
                var classesTextBox = document.getElementById("classesTextBox");
                classesTextBox.value = text;
            };

            TestApp.getRegisteredClasses = function(filter) {
                var result = [];
                var filterTextBox = TestApp.getFilterTextBox();
                var filter = filterTextBox.value;
                for (var key in Components.classes) {
                    var className = "" + Components.classes[key];
                    if (className.length == 0 || className[0] !== '@') {
                        continue;
                    }

                    if (filter === "" || className.indexOf(filter) !== -1) {
                        result.push(className);
                    }
                }
                return result;
            };

            TestApp.isComponentRegistered = function(inComponentId) {
                return typeof(Components.classes[inComponentId]) !== "undefined";
            };

            window.addEventListener("load", function() {
                    try {
                        TestApp.initialize();
                    } catch (err) {
                        alert(err);
                    }
                },
                false);
        } catch (err) {
            alert(err);
        }
        ]]>
    </script>
    <groupbox flex="1">
        <caption label="Registered classes" />
        <hbox align="center">
            <label value="Filter:" style="text-align:right" />
            <textbox id="filterTextBox" flex="1" />
            <button id="clearButton" label="Clear" />
        </hbox>
        <textbox id="classesTextBox" multiline="true" readonly="true" flex="1" />
        <textbox id="logTextBox" hidden="true" multiline="true" readonly="true" flex="1" />
    </groupbox>
</window>

