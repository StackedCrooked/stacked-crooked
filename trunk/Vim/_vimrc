
" Set auto-indent rules
set autoindent

" Set filetype dependent indention rules
filetype plugin indent on

" Enable most intuitive backspace behavior
set bs=2

" Expand tabs to spaces
set expandtab

" Don't replace tabs with spaces in makefiles
autocmd FileType make set noexpandtab

" Set tabs to 4 spaces
set softtabstop=4 
set tabstop=4 
set shiftwidth=4

" Colorize search results
set hlsearch 

" Show search results while typing
set incsearch

" Disable annoying backup/swap files
set nobackup
set noswapfile
set nowritebackup 

" Turn off vi compatibility
set nocompatible

" Show the rules
set ruler

" Show matching brackets
set showmatch

" Set ignore case when searching using only lower case characters
set smartcase

" Smart auto-indenting when typing a new line
set smartindent

" Enable syntax coloring
syntax enable

" Yank until end of line
map Y y$


" -----------------------------------------------------------------------------
" Function keys
" -----------------------------------------------------------------------------

" Split current tab
:map <F2> :tab split<CR>

" Search for constructors in a cpp file
:map <F3> /\(\<[A-Z]\w*\)::\1\><CR>

" Search for destructors in a cpp file
:map <F4> /\(\<[A-Z]\w*\>\)::\~\1<CR>


" -----------------------------------------------------------------------------
" Settings for the vim-addons plugin
" -----------------------------------------------------------------------------
fun ActivateAddons()
  if !exists('g:vimrc_loaded')
    let addonsDir = $HOME . "/vim-addons"
    set runtimepath+=~/vim-addons/vim-addon-manager
    try
      call scriptmanager#Activate([])
      let g:vim_script_manager['auto_install'] = 1
      " The 'silent' command surpresses the "Press ENTER to continue" messages.
      silent call scriptmanager#Activate(['vcscommand', 'highlight', 'The_NERD_Commenter', 'The_NERD_tree'])
    catch /.*/
      echoe v:exception
    endtry
    let g:vimrc_loaded = 1
  endif
endf
call ActivateAddons()

