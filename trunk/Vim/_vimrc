" -----------------------------------------------------------------------------
"  General Settings
" -----------------------------------------------------------------------------

" Add common search paths
set path+=/usr/local/include,/opt/local/include

" Set auto-indent rules
set autoindent

" Set filetype dependent indention rules
filetype plugin indent on

" Enable most intuitive backspace behavior
set bs=2

" Expand tabs to spaces
set expandtab

" Don't replace tabs with spaces in makefiles
autocmd FileType make set noexpandtab

" Set tabs to 4 spaces
set softtabstop=4 
set tabstop=4 
set shiftwidth=4

" Colorize search results
set hlsearch 

" Show search results while typing
set incsearch

" Disable annoying backup/swap files
set nobackup
set noswapfile
set nowritebackup 

" Turn off vi compatibility
set nocompatible

" Show the ruler at the bottom
set ruler

" Display tabs and trailing spaces
set list
set listchars=tab:»\ ,trail:·,nbsp:·

" Some stuff to get the mouse going in term
set mouse=a
set ttymouse=xterm2

" Show nice title in xterm
set title

" Set ignore case when searching using only lower case characters
set smartcase

" Smart auto-indenting when typing a new line
set smartindent

" Enable syntax coloring
syntax enable

" Set colorscheme
colorscheme default


" -----------------------------------------------------------------------------
"  File types
" -----------------------------------------------------------------------------

" SWIG.
" Requires the 'swig' plugin which is automatically
" installed by the ActivateAddons() function below.
au BufNewFile,BufRead *.i set filetype=swig 
au BufNewFile,BufRead *.swg set filetype=swig 


" -----------------------------------------------------------------------------
" Key mappings
" -----------------------------------------------------------------------------

" Disable Ex mode (bastard!)
:map Q <Nop>

" Yank until end of line
map Y y$

" F1: Open the NERDTree
:map <F1> :NERDTreeToggle<CR>

" F2: Duplicate current tab
:map <F2> :tab split<CR>

" F3: Search constructors in a cpp file
:map <F3> /\(\<[A-Z]\w*\)::\1\><CR>

" F4: Search destructors in a cpp file
:map <F4> /\(\<[A-Z]\w*\>\)::\~\1<CR>


" -----------------------------------------------------------------------------
" Settings for the vim-addons plugin
" -----------------------------------------------------------------------------
fun! ActivateAddons()
  if !exists('g:vimrc_loaded')
    let addonsDir = $HOME . "/vim-addons"
    set runtimepath+=~/vim-addons/vim-addon-manager
    try
      call scriptmanager#Activate([])
      let g:vim_script_manager['auto_install'] = 1
      " The 'silent' command surpresses the "Press ENTER to continue" messages.
      silent call scriptmanager#Activate(['swig', 'vcscommand', 'highlight', 'The_NERD_Commenter', 'The_NERD_tree'])
    catch /.*/
      echoe v:exception
    endtry
    let g:vimrc_loaded = 1
  endif
endf
call ActivateAddons()


" -----------------------------------------------------------------------------
" OpenFile. Modelled after the Firefox "Open Link in New Tab"-command.
" -----------------------------------------------------------------------------
fun! OpenFile()
  let tab_id = expand("%")
  tab split
  tabmove
  normal gf
  while tab_id != expand("%")
    tabprev
  endw
  normal j
endf

" Map CTRL-G to the OpenFile function
:map <C-G> :call OpenFile()<CR>

